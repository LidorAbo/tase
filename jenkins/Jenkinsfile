@Library('pipeline-library') _
regex = ~/^\[|\]$/
seperator = ','
replacing_char = ''
mvn_folder = 'maven'
pipeline{
    agent{
        label "ubuntu"
    }
    tools {
        maven 'mvn-3.8.6'
    }
    stages{
        stage("Print webhook parameters"){
            steps{
                script {
                  functions.prepareEnv(WebhookJson)
                  echo "Webhook parameters:"
                  echo "Repository name: $repo_name"
                  echo "Committer: $committer"
                  echo "Email of the committer: $email"
                  echo "Latest commit id of the committer: $latest_commit"
                  modified_files_array = ConvertToArray(modified_files)
                  for(modified_file in modified_files_array ) {
                        if(modified_file) {
                            echo "$modified_file file is  modified"
                        }
                        
                    }
                  added_files_array = ConvertToArray(added_files)
                  for(added_file in added_files_array) {
                        if(added_file) {
                            echo "$added_file file is added"
                        }
                        
                    }
                  removed_files_array = ConvertToArray(removed_files)
                  for(removed_file in removed_files_array) {
                       if(removed_file) {
                        echo  "$removed_file file is removed"
                       }
                    }
                  }
                }
            }
            stage('mvn package') {
                steps {
                    dir(mvn_folder) {
                        sh """
                        git checkout master
                        git reset --hard origin/master
                        mvn package
                    """
                    }
                    
                    }
            }
            stage('Upload artifact to git') {
                steps {
                    dir(mvn_folder) {
                        sh """
                            git config --global user.email $email
                            git config --global user.name $committer
                            git add target/*.jar 
                            git commit -m 'Added/Replaced hello world jar artifact'
                        """
                        withCredentials([usernamePassword(credentialsId: 'git-token',
                 usernameVariable: 'username',
                 passwordVariable: 'password')]){
    sh("git push https://$username:$password@github.com/$committer/${repo_name}.git")
}
                    }
                }
            }
        }
}
def ConvertToArray(String array) {
    return array.replaceAll(regex, replacing_char).split(seperator)
}